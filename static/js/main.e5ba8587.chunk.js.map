{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","allTodos","userId","usersFromServer","find","App","useState","isUserSelected","setIsUserSelected","isTitle","setIsTitle","setTitle","userSelected","setUserSelected","setTodos","action","method","onSubmit","event","preventDefault","trim","userName","userToAdd","current","MaxId","Math","max","htmlFor","type","value","onChange","target","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5ba8587.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\n\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\n\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article className={\n    classNames(\n      'TodoInfo',\n      {\n        'TodoInfo--completed': todo.completed,\n      },\n    )\n  }\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    {todo.user && (\n      <UserInfo user={todo.user} />\n    )}\n  </article>\n);\n","import React from 'react';\n\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction getUserByName(userName: string): User | null {\n  return usersFromServer.find(user => user.name === userName) || null;\n}\n\nconst allTodos: Todo[] = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: getUserById(todo.userId),\n  };\n});\n\nexport const App: React.FC = () => {\n  const [isUserSelected, setIsUserSelected] = useState(false);\n  const [isTitle, setIsTitle] = useState(false);\n  const [title, setTitle] = useState('');\n  const [userSelected, setUserSelected] = useState('');\n  const [todos, setTodos] = useState(allTodos);\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsTitle(false);\n  };\n\n  const handleUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserSelected(event.target.value);\n    setIsUserSelected(false);\n  };\n\n  const handleNewTodo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setIsTitle(!title.trim());\n    setIsUserSelected(!userSelected);\n\n    if (!userSelected || title.trim() === '') {\n      return;\n    }\n\n    const userToAdd = getUserByName(userSelected);\n\n    setTodos(current => {\n      const MaxId = Math.max(...current.map(todo => todo.id));\n\n      return [\n        ...current,\n        {\n          id: MaxId + 1,\n          title,\n          completed: false,\n          userId: userToAdd ? userToAdd.id : null,\n          user: userToAdd,\n        },\n      ];\n    });\n\n    setTitle('');\n    setUserSelected('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleNewTodo}\n      >\n        <div className=\"field\">\n          <label\n            htmlFor=\"title\"\n          >\n            Title:\n          </label>\n\n          <input\n            type=\"text\"\n            name=\"title\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitle}\n            placeholder=\"Enter a title\"\n            className=\"formElement\"\n          />\n\n          {isTitle && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label\n            htmlFor=\"select\"\n          >\n            User:\n          </label>\n\n          <select\n            data-cy=\"userSelect\"\n            name=\"select\"\n            value={userSelected}\n            onChange={handleUserSelect}\n            className=\"formElement selector\"\n          >\n            <option value=\"\" disabled>\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.name}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {isUserSelected && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}